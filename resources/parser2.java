
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package server.backend.analizadores;

import java_cup.runtime.*;
import server.backend.analizadores.sym2;
import server.backend.xml.ImportadorXML;
import server.backend.sitioweb.*;
import server.backend.paginaweb.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser2 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym2.class;
}

  /** Default constructor. */
  @Deprecated
  public parser2() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\126\000\002\002\004\000\002\002\004\000\002\002" +
    "\003\000\002\017\010\000\002\017\007\000\002\003\003" +
    "\000\002\020\010\000\002\021\005\000\002\022\005\000" +
    "\002\023\005\000\002\024\005\000\002\025\005\000\002" +
    "\026\005\000\002\027\004\000\002\027\003\000\002\030" +
    "\013\000\002\030\012\000\002\030\012\000\002\030\011" +
    "\000\002\004\003\000\002\054\003\000\002\031\011\000" +
    "\002\031\010\000\002\031\010\000\002\031\007\000\002" +
    "\032\005\000\002\033\005\000\002\034\005\000\002\035" +
    "\005\000\002\036\005\000\002\005\005\000\002\006\005" +
    "\000\002\014\004\000\002\014\003\000\002\015\005\000" +
    "\002\037\004\000\002\037\003\000\002\040\006\000\002" +
    "\040\006\000\002\040\006\000\002\040\006\000\002\040" +
    "\006\000\002\016\005\000\002\007\007\000\002\007\006" +
    "\000\002\007\006\000\002\007\005\000\002\041\005\000" +
    "\002\044\005\000\002\042\005\000\002\010\007\000\002" +
    "\010\006\000\002\010\006\000\002\010\005\000\002\055" +
    "\005\000\002\056\005\000\002\060\005\000\002\011\010" +
    "\000\002\011\007\000\002\064\005\000\002\043\005\000" +
    "\002\045\003\000\002\045\003\000\002\045\003\000\002" +
    "\045\003\000\002\046\005\000\002\047\005\000\002\012" +
    "\007\000\002\057\005\000\002\061\005\000\002\062\005" +
    "\000\002\013\006\000\002\013\005\000\002\013\005\000" +
    "\002\063\003\000\002\050\005\000\002\051\005\000\002" +
    "\053\003\000\002\053\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\335\000\004\004\005\001\002\000\006\002\337\004" +
    "\005\001\002\000\004\006\ufffc\001\002\000\006\002\uffff" +
    "\004\uffff\001\002\000\004\006\011\001\002\000\004\076" +
    "\041\001\002\000\004\070\037\001\002\000\004\010\014" +
    "\001\002\000\004\014\020\001\002\000\004\070\015\001" +
    "\002\000\004\011\016\001\002\000\004\014\ufff9\001\002" +
    "\000\004\016\023\001\002\000\004\075\021\001\002\000" +
    "\004\015\022\001\002\000\004\016\ufff8\001\002\000\004" +
    "\075\035\001\002\000\004\012\025\001\002\000\004\070" +
    "\033\001\002\000\004\062\027\001\002\000\004\072\031" +
    "\001\002\000\004\076\ufffb\001\002\000\004\063\032\001" +
    "\002\000\004\076\ufff5\001\002\000\004\013\034\001\002" +
    "\000\004\062\ufff6\001\002\000\004\017\036\001\002\000" +
    "\004\012\ufff7\001\002\000\004\007\040\001\002\000\004" +
    "\010\ufffa\001\002\000\006\020\042\077\045\001\002\000" +
    "\004\006\uffee\001\002\000\004\006\055\001\002\000\006" +
    "\020\042\077\050\001\002\000\004\005\047\001\002\000" +
    "\006\020\ufff3\077\ufff3\001\002\000\006\002\ufffd\004\ufffd" +
    "\001\002\000\004\005\052\001\002\000\006\020\ufff4\077" +
    "\ufff4\001\002\000\006\002\ufffe\004\ufffe\001\002\000\010" +
    "\010\276\022\274\026\272\001\002\000\004\102\060\001" +
    "\002\000\004\070\056\001\002\000\004\007\057\001\002" +
    "\000\010\010\uffe8\022\uffe8\026\uffe8\001\002\000\006\060" +
    "\063\103\064\001\002\000\004\100\263\001\002\000\006" +
    "\060\uffe0\103\uffe0\001\002\000\024\064\124\065\130\066" +
    "\120\067\125\070\127\071\122\072\121\074\123\075\117" +
    "\001\002\000\004\100\uffed\001\002\000\006\060\063\103" +
    "\064\001\002\000\004\100\070\001\002\000\006\060\uffe1" +
    "\103\uffe1\001\002\000\006\030\072\101\073\001\002\000" +
    "\006\030\072\101\256\001\002\000\004\006\077\001\002" +
    "\000\004\021\075\001\002\000\006\030\uffdd\101\uffdd\001" +
    "\002\000\006\020\ufff1\077\ufff1\001\002\000\014\022\111" +
    "\042\107\044\114\054\110\056\106\001\002\000\004\070" +
    "\100\001\002\000\004\007\101\001\002\000\014\022\uffd7" +
    "\042\uffd7\044\uffd7\054\uffd7\056\uffd7\001\002\000\006\026" +
    "\244\102\243\001\002\000\004\031\241\001\002\000\004" +
    "\031\240\001\002\000\004\031\237\001\002\000\006\026" +
    "\uffb7\102\uffb7\001\002\000\004\034\217\001\002\000\004" +
    "\046\202\001\002\000\004\034\161\001\002\000\004\031" +
    "\157\001\002\000\004\031\156\001\002\000\004\046\116" +
    "\001\002\000\006\036\134\050\133\001\002\000\024\064" +
    "\124\065\130\066\120\067\125\070\127\071\122\072\121" +
    "\074\123\075\117\001\002\000\014\023\uffad\035\uffad\047" +
    "\uffad\061\uffad\103\uffad\001\002\000\014\023\uffb0\035\uffb0" +
    "\047\uffb0\061\uffb0\103\uffb0\001\002\000\014\023\uffb4\035" +
    "\uffb4\047\uffb4\061\uffb4\103\uffb4\001\002\000\014\023\uffb3" +
    "\035\uffb3\047\uffb3\061\uffb3\103\uffb3\001\002\000\014\023" +
    "\uffb2\035\uffb2\047\uffb2\061\uffb2\103\uffb2\001\002\000\014" +
    "\023\uffae\035\uffae\047\uffae\061\uffae\103\uffae\001\002\000" +
    "\014\023\uffaf\035\uffaf\047\uffaf\061\uffaf\103\uffaf\001\002" +
    "\000\004\047\131\001\002\000\014\023\uffac\035\uffac\047" +
    "\uffac\061\uffac\103\uffac\001\002\000\014\023\uffb1\035\uffb1" +
    "\047\uffb1\061\uffb1\103\uffb1\001\002\000\006\036\uffc5\050" +
    "\uffc5\001\002\000\004\050\133\001\002\000\004\071\151" +
    "\001\002\000\012\064\144\065\147\066\143\067\146\001" +
    "\002\000\004\052\136\001\002\000\004\071\141\001\002" +
    "\000\004\045\140\001\002\000\004\031\uffc7\001\002\000" +
    "\004\053\142\001\002\000\004\045\uffbf\001\002\000\004" +
    "\037\uffc2\001\002\000\004\037\uffc4\001\002\000\004\037" +
    "\150\001\002\000\004\037\uffc3\001\002\000\004\037\uffc1" +
    "\001\002\000\004\050\uffc6\001\002\000\004\051\152\001" +
    "\002\000\004\052\uffc0\001\002\000\004\052\136\001\002" +
    "\000\004\045\155\001\002\000\004\031\uffc8\001\002\000" +
    "\006\030\uffda\101\uffda\001\002\000\006\030\uffdb\101\uffdb" +
    "\001\002\000\010\023\167\036\170\040\165\001\002\000" +
    "\024\064\124\065\130\066\120\067\125\070\127\071\122" +
    "\072\121\074\123\075\117\001\002\000\004\035\163\001" +
    "\002\000\010\023\uffd2\036\uffd2\040\uffd2\001\002\000\006" +
    "\023\177\040\165\001\002\000\004\074\174\001\002\000" +
    "\004\023\173\001\002\000\004\031\uffd3\001\002\000\012" +
    "\064\144\065\147\066\143\067\146\001\002\000\004\037" +
    "\172\001\002\000\006\023\uffd1\040\uffd1\001\002\000\004" +
    "\031\uffd5\001\002\000\004\041\175\001\002\000\004\023" +
    "\uffd0\001\002\000\004\023\200\001\002\000\004\031\uffd4" +
    "\001\002\000\004\031\uffd6\001\002\000\004\050\206\001" +
    "\002\000\024\064\124\065\130\066\120\067\125\070\127" +
    "\071\122\072\121\074\123\075\117\001\002\000\004\047" +
    "\204\001\002\000\004\050\uffbd\001\002\000\004\052\212" +
    "\001\002\000\004\071\207\001\002\000\004\051\210\001" +
    "\002\000\004\052\uffbc\001\002\000\004\055\215\001\002" +
    "\000\004\071\213\001\002\000\004\053\214\001\002\000" +
    "\004\055\uffbb\001\002\000\004\031\uffbe\001\002\000\010" +
    "\036\226\040\222\043\224\001\002\000\024\064\124\065" +
    "\130\066\120\067\125\070\127\071\122\072\121\074\123" +
    "\075\117\001\002\000\004\035\221\001\002\000\010\036" +
    "\uffcb\040\uffcb\043\uffcb\001\002\000\004\074\235\001\002" +
    "\000\004\043\234\001\002\000\004\031\uffcc\001\002\000" +
    "\006\040\222\043\232\001\002\000\012\064\144\065\147" +
    "\066\143\067\146\001\002\000\004\037\230\001\002\000" +
    "\006\040\uffc9\043\uffc9\001\002\000\004\043\233\001\002" +
    "\000\004\031\uffcd\001\002\000\004\031\uffcf\001\002\000" +
    "\004\031\uffce\001\002\000\004\041\236\001\002\000\004" +
    "\043\uffca\001\002\000\006\030\uffdc\101\uffdc\001\002\000" +
    "\006\030\uffd8\101\uffd8\001\002\000\006\030\uffd9\101\uffd9" +
    "\001\002\000\004\057\255\001\002\000\024\064\124\065" +
    "\130\066\120\067\125\070\127\071\122\072\121\074\123" +
    "\075\117\001\002\000\004\070\251\001\002\000\006\057" +
    "\247\102\243\001\002\000\004\057\250\001\002\000\004" +
    "\031\uffb8\001\002\000\004\031\uffba\001\002\000\004\027" +
    "\252\001\002\000\006\057\uffb6\102\uffb6\001\002\000\004" +
    "\103\254\001\002\000\004\057\uffb5\001\002\000\004\031" +
    "\uffb9\001\002\000\004\021\260\001\002\000\006\030\uffde" +
    "\101\uffde\001\002\000\006\020\ufff2\077\ufff2\001\002\000" +
    "\004\061\262\001\002\000\006\060\uffdf\103\uffdf\001\002" +
    "\000\006\030\072\101\265\001\002\000\006\030\072\101" +
    "\267\001\002\000\004\021\266\001\002\000\006\020\uffef" +
    "\077\uffef\001\002\000\004\021\270\001\002\000\006\020" +
    "\ufff0\077\ufff0\001\002\000\006\010\276\026\272\001\002" +
    "\000\004\070\323\001\002\000\004\014\303\001\002\000" +
    "\024\064\124\065\130\066\120\067\125\070\127\071\122" +
    "\072\121\074\123\075\117\001\002\000\004\010\276\001" +
    "\002\000\004\070\277\001\002\000\004\011\300\001\002" +
    "\000\004\014\uffe7\001\002\000\004\014\303\001\002\000" +
    "\004\016\306\001\002\000\004\075\304\001\002\000\004" +
    "\015\305\001\002\000\004\016\uffe6\001\002\000\004\075" +
    "\314\001\002\000\004\012\310\001\002\000\004\070\312" +
    "\001\002\000\004\102\uffea\001\002\000\004\013\313\001" +
    "\002\000\004\102\uffe4\001\002\000\004\017\315\001\002" +
    "\000\004\012\uffe5\001\002\000\004\023\317\001\002\000" +
    "\006\010\uffe3\026\uffe3\001\002\000\004\016\306\001\002" +
    "\000\004\012\310\001\002\000\004\102\uffe9\001\002\000" +
    "\004\027\324\001\002\000\004\010\uffe2\001\002\000\004" +
    "\014\303\001\002\000\004\010\276\001\002\000\004\014" +
    "\303\001\002\000\004\016\306\001\002\000\004\012\310" +
    "\001\002\000\004\102\uffec\001\002\000\004\016\306\001" +
    "\002\000\004\012\310\001\002\000\004\102\uffeb\001\002" +
    "\000\006\002\000\004\000\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\335\000\010\002\003\003\006\017\005\001\001\000" +
    "\006\003\006\017\335\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\007\021\011\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\022\012\001\001\000\004" +
    "\023\016\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\023\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\025\001\001\000\002\001\001\000\004\026\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\004\042\027\043\030\045\001\001" +
    "\000\002\001\001\000\006\031\053\032\052\001\001\000" +
    "\006\004\042\030\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\005\270\006\274\033\272" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\014\064\015\061\054\060" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\053" +
    "\260\001\001\000\002\001\001\000\006\015\066\054\065" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\037" +
    "\070\040\073\001\001\000\004\040\256\001\001\000\004" +
    "\016\075\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\007\104\010\111\011\112\012\102" +
    "\013\103\063\101\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\050\244\051\241\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\055\215\001\001\000\004\057\200" +
    "\001\001\000\004\041\157\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\043\114\001\001\000\006\046\134" +
    "\064\131\001\001\000\004\053\125\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\152\001\001\000\002\001\001\000" +
    "\004\045\144\001\001\000\004\047\136\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\047\153\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\042\165\044\163" +
    "\001\001\000\004\053\161\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\042\175\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\170\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\061\204\001\001" +
    "\000\004\053\202\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\062\210\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\056\222\060\224\001\001\000\004\053\217\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\056\230\001" +
    "\001\000\004\045\226\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\053\252\001\001\000\002\001\001" +
    "\000\004\051\245\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\037\263\040\073\001" +
    "\001\000\004\040\256\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\325\033\324\001\001\000\002\001\001\000\004\034\317" +
    "\001\001\000\004\053\315\001\001\000\004\033\300\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\301\001\001\000\004\035\306\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\036\310\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\320\001\001\000\004\036\321\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\332\001\001\000\004\033\326\001\001\000\004" +
    "\034\327\001\001\000\004\035\330\001\001\000\004\036" +
    "\331\001\001\000\002\001\001\000\004\035\333\001\001" +
    "\000\004\036\334\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	private ImportadorXML ixml = null;
	private SitioWeb sw = null;
	private PaginaWeb pw = null;
	private int internalOption = 0;

	// Connect this parser to a scanner!
	public parser2(Lexer2 lex, ImportadorXML ixml) {
		super(lex);
		this.ixml = ixml;
	}

        public void syntax_error(Symbol s) {
            System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
        }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser2$actions {
  private final parser2 parser;

  /** Constructor */
  CUP$parser2$actions(parser2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action_part00000000(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser2$result;

      /* select the action based on the action number */
      switch (CUP$parser2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= main EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = start_val;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser2$parser.done_parsing();
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // main ::= main sitioWeb 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // main ::= sitioWeb 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // sitioWeb ::= sitio parametros1 PAGINAS_ABIERTO paginas PAGINAS_CERRADO SITIO_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("sitioWeb",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // sitioWeb ::= sitio parametros1 PAGINAS_ABIERTO PAGINAS_CERRADO SITIO_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("sitioWeb",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // sitio ::= SITIO_WEB_ABIERTO 
            {
              String RESULT =null;
		ixml.setSitioWeb(null, 1);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("sitio",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // parametros1 ::= id usuarioCreacion fechaCreacion fechaModificacion usuarioModificacion path 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros1",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // id ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setSitioWeb(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // usuarioCreacion ::= USUARIO_CREACION_ABIERTO IDENTIFICADOR USUARIO_CREACION_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setSitioWeb(RESULT, 5);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioCreacion",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // fechaCreacion ::= FECHA_CREACION_ABIERTO FECHA_PARAMETRO FECHA_CREACION_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3; ixml.setSitioWeb(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaCreacion",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // fechaModificacion ::= FECHA_MODIFICACION_ABIERTO FECHA_PARAMETRO FECHA_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e4; ixml.setSitioWeb(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaModificacion",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // usuarioModificacion ::= USUARIO_MODIFICACION_ABIERTO IDENTIFICADOR USUARIO_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e5; ixml.setSitioWeb(RESULT, 6);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioModificacion",19, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // path ::= PATH_ABIERTO TEXTO_PARAMETRO PATH_CERRADO 
            {
              String RESULT =null;
		ixml.setSitioWeb(RESULT, 7);sw = ixml.getSitioWeb();
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("path",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // paginas ::= paginas pagina 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paginas",21, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // paginas ::= pagina 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paginas",21, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // pagina ::= pagWeb parametros2 ETIQUETAS_ABIERTO etiquetas etiquetasCerrado COMPONENTES_ABIERTO componentes COMPONENTES_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-8)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // pagina ::= pagWeb parametros2 ETIQUETAS_ABIERTO etiquetas etiquetasCerrado COMPONENTES_ABIERTO COMPONENTES_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // pagina ::= pagWeb parametros2 ETIQUETAS_ABIERTO etiquetasCerrado COMPONENTES_ABIERTO componentes COMPONENTES_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // pagina ::= pagWeb parametros2 ETIQUETAS_ABIERTO etiquetasCerrado COMPONENTES_ABIERTO COMPONENTES_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-6)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // pagWeb ::= PAGINA_WEB_ABIERTO 
            {
              String RESULT =null;
		ixml.setPaginaWeb(null, 1);ixml.setPaginaWeb("["+sw.getId()+"]", 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagWeb",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // etiquetasCerrado ::= ETIQUETAS_CERRADO 
            {
              String RESULT =null;
		ixml.setPaginaWeb(null, 11);pw = ixml.getPaginaWeb();
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquetasCerrado",42, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // parametros2 ::= id2 titulo2 padre2 usuarioCreacion2 fechaCreacion2 fechaModificacion2 usuarioModificacion2 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros2",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-6)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros2 ::= id2 titulo2 usuarioCreacion2 fechaCreacion2 fechaModificacion2 usuarioModificacion2 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros2",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametros2 ::= id2 padre2 usuarioCreacion2 fechaCreacion2 fechaModificacion2 usuarioModificacion2 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros2",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametros2 ::= id2 usuarioCreacion2 fechaCreacion2 fechaModificacion2 usuarioModificacion2 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros2",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // id2 ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setPaginaWeb(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id2",24, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // usuarioCreacion2 ::= USUARIO_CREACION_ABIERTO IDENTIFICADOR USUARIO_CREACION_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setPaginaWeb(RESULT, 5);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioCreacion2",25, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // fechaCreacion2 ::= FECHA_CREACION_ABIERTO FECHA_PARAMETRO FECHA_CREACION_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3;ixml.setPaginaWeb(RESULT, 7);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaCreacion2",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // fechaModificacion2 ::= FECHA_MODIFICACION_ABIERTO FECHA_PARAMETRO FECHA_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e4;ixml.setPaginaWeb(RESULT, 8);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaModificacion2",27, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // usuarioModificacion2 ::= USUARIO_MODIFICACION_ABIERTO IDENTIFICADOR USUARIO_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e5;ixml.setPaginaWeb(RESULT, 6);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioModificacion2",28, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // titulo2 ::= TITULO_ABIERTO paraReser TITULO_CERRADO 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e6;ixml.setPaginaWeb(RESULT, 10);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo2",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // padre2 ::= PADRE_ABIERTO IDENTIFICADOR PADRE_CERRADO 
            {
              String RESULT =null;
		int e7left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e7right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e7 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e7;ixml.setPaginaWeb(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("padre2",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // etiquetas ::= etiquetas etiquet 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquetas",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // etiquetas ::= etiquet 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquetas",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // etiquet ::= ETIQUETA_ABIERTO paraReser ETIQUETA_CERRADO 
            {
              String RESULT =null;
		int e8left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e8right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e8 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e8; ixml.setPaginaWeb(RESULT, 9);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquet",11, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // componentes ::= componentes componente 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componentes",29, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // componentes ::= componente 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componentes",29, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // componente ::= COMPONENTE_ABIERTO id3 titulo COMPONENTE_CERRADO 
            {
              String RESULT =null;
		ixml.setClase(1);ixml.setComponente(null, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // componente ::= COMPONENTE_ABIERTO id3 parrafo COMPONENTE_CERRADO 
            {
              String RESULT =null;
		ixml.setClase(2);ixml.setComponente(null, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // componente ::= COMPONENTE_ABIERTO id3 imagen COMPONENTE_CERRADO 
            {
              String RESULT =null;
		ixml.setClase(3);ixml.setComponente(null, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // componente ::= COMPONENTE_ABIERTO id3 video COMPONENTE_CERRADO 
            {
              String RESULT =null;
		ixml.setClase(4);ixml.setComponente(null, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // componente ::= COMPONENTE_ABIERTO id3 menu COMPONENTE_CERRADO 
            {
              String RESULT =null;
		ixml.setClase(5);ixml.setComponente(null, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // id3 ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1; ixml.setComponente(RESULT, 1);ixml.setComponente("["+pw.getId()+"]", 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id3",12, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // titulo ::= TITULO_ABIERTO texto alineacion color TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // titulo ::= TITULO_ABIERTO texto color TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // titulo ::= TITULO_ABIERTO texto alineacion TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // titulo ::= TITULO_ABIERTO texto TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // texto ::= TEXTO_ABIERTO paraReser TEXTO_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1; ixml.setTitulo(null, 1); ixml.setTitulo(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("texto",31, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // alineacion ::= ALINEACION_ABIERTO alineacion1 ALINEACION_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setTitulo(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion",34, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // color ::= COLOR_ABIERTO HEXADECIMAL_PARAMETRO COLOR_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3; ixml.setTitulo(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("color",32, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parrafo ::= PARRAFO_ABIERTO texto2 alineacion2 color2 PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parrafo ::= PARRAFO_ABIERTO texto2 color2 PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parrafo ::= PARRAFO_ABIERTO texto2 alineacion2 PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // parrafo ::= PARRAFO_ABIERTO texto2 PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // texto2 ::= TEXTO_ABIERTO paraReser TEXTO_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1; ixml.setParrafo(null, 1); ixml.setParrafo(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("texto2",43, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // color2 ::= COLOR_ABIERTO HEXADECIMAL_PARAMETRO COLOR_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2; ixml.setParrafo(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("color2",44, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // alineacion2 ::= ALINEACION_ABIERTO alineacion1 ALINEACION_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setParrafo(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion2",46, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // imagen ::= IMAGEN_ABIERTO origen alineacion4 altura ancho IMAGEN_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("imagen",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // imagen ::= IMAGEN_ABIERTO origen altura ancho IMAGEN_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("imagen",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // alineacion4 ::= ALINEACION_ABIERTO alineacion1 ALINEACION_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setImagen(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion4",50, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // origen ::= ORIGEN_ABIERTO paraReser ORIGEN_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1; ixml.setImagen(null, 1);ixml.setImagen(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("origen",33, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // alineacion1 ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e1;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // alineacion1 ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e2;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // alineacion1 ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e3;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // alineacion1 ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e4;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // altura ::= ALTURA_ABIERTO ENTERO_PARAMETRO ALTURA_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setImagen(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("altura",36, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ancho ::= ANCHO_ABIERTO ENTERO_PARAMETRO ANCHO_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setImagen(RESULT, 5);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("ancho",37, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // video ::= VIDEO_ABIERTO origen2 altura2 ancho2 VIDEO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("video",8, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // origen2 ::= ORIGEN_ABIERTO paraReser ORIGEN_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setVideo(null, 1);ixml.setVideo(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("origen2",45, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // altura2 ::= ALTURA_ABIERTO ENTERO_PARAMETRO ALTURA_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setVideo(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("altura2",47, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ancho2 ::= ANCHO_ABIERTO ENTERO_PARAMETRO ANCHO_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3;ixml.setVideo(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("ancho2",48, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // menu ::= submenu padre etiqueta MENU_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("menu",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // menu ::= submenu etiqueta MENU_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("menu",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // menu ::= submenu padre MENU_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("menu",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // submenu ::= MENU_ABIERTO 
            {
              String RESULT =null;
		ixml.setMenu(null, 1);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("submenu",49, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // padre ::= PADRE_ABIERTO IDENTIFICADOR PADRE_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1; ixml.setMenu(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("padre",38, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // etiqueta ::= ETIQUETAS_ABIERTO paraReser ETIQUETAS_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setMenu(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiqueta",39, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // paraReser ::= TEXTO_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e1;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // paraReser ::= ENTERO_PARAMETRO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e2;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // paraReser ::= HEXADECIMAL_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e3;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // paraReser ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e4;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // paraReser ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e5;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // paraReser ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e6;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // paraReser ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;
		int e7left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e7right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e7 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e7;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // paraReser ::= FECHA_PARAMETRO 
            {
              String RESULT =null;
		int e8left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e8right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e8 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e8;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // paraReser ::= IDENTIFICADOR 
            {
              String RESULT =null;
		int e9left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int e9right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String e9 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		RESULT = e9;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paraReser",41, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
              return CUP$parser2$do_action_part00000000(
                               CUP$parser2$act_num,
                               CUP$parser2$parser,
                               CUP$parser2$stack,
                               CUP$parser2$top);
    }
}

}
