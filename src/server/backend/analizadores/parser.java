
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package server.backend.analizadores;

import java_cup.runtime.*;
import server.backend.analizadores.sym1;
import server.backend.manejadores.*;
import server.backend.sitioweb.*;
import server.backend.paginaweb.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym1.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\300\000\002\002\004\000\002\002\011\000\002\002" +
    "\003\000\002\003\004\000\002\003\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\007\015\000\002" +
    "\015\010\000\002\016\007\000\002\016\006\000\002\017" +
    "\007\000\002\020\005\000\002\020\005\000\002\021\003" +
    "\000\002\021\003\000\002\022\003\000\002\022\003\000" +
    "\002\022\003\000\002\010\015\000\002\023\010\000\002" +
    "\023\010\000\002\024\014\000\002\011\015\000\002\025" +
    "\010\000\002\026\004\000\002\026\004\000\002\102\014" +
    "\000\002\103\014\000\002\012\015\000\002\012\024\000" +
    "\002\027\010\000\002\030\007\000\002\030\006\000\002" +
    "\031\007\000\002\032\005\000\002\032\005\000\002\032" +
    "\005\000\002\033\003\000\002\033\003\000\002\033\003" +
    "\000\002\033\003\000\002\033\003\000\002\034\003\000" +
    "\002\034\003\000\002\035\004\000\002\035\003\000\002" +
    "\036\011\000\002\013\024\000\002\013\015\000\002\037" +
    "\010\000\002\040\007\000\002\040\006\000\002\041\007" +
    "\000\002\042\005\000\002\042\005\000\002\043\003\000" +
    "\002\043\003\000\002\100\004\000\002\100\003\000\002" +
    "\101\011\000\002\014\024\000\002\014\024\000\002\014" +
    "\024\000\002\014\024\000\002\014\024\000\002\044\010" +
    "\000\002\044\010\000\002\045\004\000\002\045\004\000" +
    "\002\045\005\000\002\045\005\000\002\047\004\000\002" +
    "\047\004\000\002\070\014\000\002\066\014\000\002\067" +
    "\014\000\002\046\007\000\002\046\006\000\002\053\007" +
    "\000\002\052\005\000\002\052\005\000\002\052\005\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\051\004\000\002\051\004\000\002\051" +
    "\005\000\002\051\005\000\002\071\014\000\002\054\004" +
    "\000\002\054\004\000\002\054\005\000\002\054\005\000" +
    "\002\072\014\000\002\055\007\000\002\055\006\000\002" +
    "\056\007\000\002\057\005\000\002\057\005\000\002\057" +
    "\003\000\002\060\005\000\002\060\005\000\002\061\004" +
    "\000\002\061\004\000\002\061\005\000\002\061\005\000" +
    "\002\073\014\000\002\062\005\000\002\062\005\000\002" +
    "\062\005\000\002\062\005\000\002\062\005\000\002\062" +
    "\005\000\002\077\014\000\002\075\014\000\002\076\014" +
    "\000\002\063\004\000\002\063\004\000\002\063\005\000" +
    "\002\063\005\000\002\074\014\000\002\064\007\000\002" +
    "\064\006\000\002\065\011\000\002\065\011\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\006\003\000\002\006\003\000\002\006" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\006\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0263\000\004\046\006\001\002\000\006\002\ufff9\046" +
    "\ufff9\001\002\000\006\002\ufffa\046\ufffa\001\002\000\006" +
    "\052\u024b\054\u024a\001\002\000\004\002\u0249\001\002\000" +
    "\006\002\ufff8\046\ufff8\001\002\000\004\046\u0115\001\002" +
    "\000\004\002\uffff\001\002\000\004\046\344\001\002\000" +
    "\004\046\157\001\002\000\004\046\111\001\002\000\006" +
    "\002\ufffb\046\ufffb\001\002\000\006\002\ufffc\046\ufffc\001" +
    "\002\000\004\046\065\001\002\000\004\046\023\001\002" +
    "\000\006\002\ufff7\046\ufff7\001\002\000\004\061\024\001" +
    "\002\000\004\047\025\001\002\000\004\046\030\001\002" +
    "\000\004\046\054\001\002\000\004\046\050\001\002\000" +
    "\004\057\031\001\002\000\004\056\032\001\002\000\004" +
    "\050\033\001\002\000\014\014\040\020\043\021\041\022" +
    "\036\023\034\001\002\000\004\047\uffeb\001\002\000\004" +
    "\046\ufff2\001\002\000\004\047\uffee\001\002\000\004\047" +
    "\046\001\002\000\004\047\uffed\001\002\000\004\047\uffef" +
    "\001\002\000\004\047\044\001\002\000\004\047\uffec\001" +
    "\002\000\004\100\045\001\002\000\004\046\ufff1\001\002" +
    "\000\004\075\047\001\002\000\004\046\ufff0\001\002\000" +
    "\004\060\051\001\002\000\004\047\052\001\002\000\004" +
    "\046\ufff3\001\002\000\004\046\062\001\002\000\006\057" +
    "\031\062\055\001\002\000\004\047\056\001\002\000\004" +
    "\046\057\001\002\000\004\053\060\001\002\000\004\047" +
    "\061\001\002\000\006\002\ufff6\046\ufff6\001\002\000\004" +
    "\060\063\001\002\000\004\047\064\001\002\000\004\046" +
    "\ufff4\001\002\000\004\061\066\001\002\000\004\047\067" +
    "\001\002\000\004\046\071\001\002\000\004\046\103\001" +
    "\002\000\004\057\072\001\002\000\004\056\073\001\002" +
    "\000\004\050\074\001\002\000\004\014\075\001\002\000" +
    "\004\047\076\001\002\000\004\075\077\001\002\000\004" +
    "\046\100\001\002\000\004\060\101\001\002\000\004\047" +
    "\102\001\002\000\004\046\uffe7\001\002\000\004\062\104" +
    "\001\002\000\004\047\105\001\002\000\004\046\106\001" +
    "\002\000\004\053\107\001\002\000\004\047\110\001\002" +
    "\000\006\002\uffea\046\uffea\001\002\000\004\061\112\001" +
    "\002\000\004\047\113\001\002\000\004\046\117\001\002" +
    "\000\004\046\151\001\002\000\004\046\145\001\002\000" +
    "\004\046\140\001\002\000\004\057\120\001\002\000\004" +
    "\056\121\001\002\000\004\050\122\001\002\000\006\014" +
    "\123\024\124\001\002\000\004\047\132\001\002\000\004" +
    "\047\125\001\002\000\004\075\126\001\002\000\004\046" +
    "\127\001\002\000\004\060\130\001\002\000\004\047\131" +
    "\001\002\000\004\046\uffe1\001\002\000\004\075\133\001" +
    "\002\000\004\046\134\001\002\000\004\060\135\001\002" +
    "\000\004\047\136\001\002\000\004\046\uffe2\001\002\000" +
    "\004\046\uffe4\001\002\000\004\057\141\001\002\000\004" +
    "\056\142\001\002\000\004\050\143\001\002\000\004\024" +
    "\124\001\002\000\004\046\uffe3\001\002\000\004\057\146" +
    "\001\002\000\004\056\147\001\002\000\004\050\150\001" +
    "\002\000\004\014\123\001\002\000\004\062\152\001\002" +
    "\000\004\047\153\001\002\000\004\046\154\001\002\000" +
    "\004\053\155\001\002\000\004\047\156\001\002\000\006" +
    "\002\uffe6\046\uffe6\001\002\000\004\061\160\001\002\000" +
    "\004\047\161\001\002\000\004\046\164\001\002\000\004" +
    "\046\236\001\002\000\004\046\232\001\002\000\004\057" +
    "\165\001\002\000\004\056\166\001\002\000\004\050\167" +
    "\001\002\000\022\014\170\015\173\016\172\017\175\020" +
    "\171\021\177\022\176\023\202\001\002\000\004\047\uffd7" +
    "\001\002\000\004\047\uffd4\001\002\000\004\047\uffd6\001" +
    "\002\000\004\047\207\001\002\000\004\046\uffdb\001\002" +
    "\000\004\047\uffd5\001\002\000\004\047\uffd1\001\002\000" +
    "\004\047\uffd2\001\002\000\004\047\205\001\002\000\004" +
    "\047\203\001\002\000\004\047\uffd3\001\002\000\004\075" +
    "\204\001\002\000\004\046\uffda\001\002\000\004\100\206" +
    "\001\002\000\004\046\uffd8\001\002\000\044\026\210\027" +
    "\226\030\217\031\220\033\212\042\213\043\215\044\222" +
    "\045\221\052\211\053\223\054\231\055\230\074\225\075" +
    "\227\076\214\077\216\001\002\000\004\046\uff4a\001\002" +
    "\000\004\046\uff4e\001\002\000\004\046\uff46\001\002\000" +
    "\004\046\uff52\001\002\000\004\046\uff43\001\002\000\004" +
    "\046\uff51\001\002\000\004\046\uff44\001\002\000\004\046" +
    "\uff48\001\002\000\004\046\uff47\001\002\000\004\046\uff4f" +
    "\001\002\000\004\046\uff50\001\002\000\004\046\uff4d\001" +
    "\002\000\004\046\uffd9\001\002\000\004\046\uff42\001\002" +
    "\000\004\046\uff49\001\002\000\004\046\uff45\001\002\000" +
    "\004\046\uff4b\001\002\000\004\046\uff4c\001\002\000\004" +
    "\060\233\001\002\000\004\047\234\001\002\000\004\046" +
    "\uffdc\001\002\000\004\046\341\001\002\000\006\057\165" +
    "\062\237\001\002\000\004\047\240\001\002\000\004\046" +
    "\241\001\002\000\006\053\242\065\243\001\002\000\004" +
    "\047\340\001\002\000\004\047\244\001\002\000\004\046" +
    "\246\001\002\000\004\046\uffcf\001\002\000\004\063\252" +
    "\001\002\000\004\046\251\001\002\000\004\046\uffd0\001" +
    "\002\000\006\063\252\066\253\001\002\000\004\073\260" +
    "\001\002\000\004\047\254\001\002\000\004\046\255\001" +
    "\002\000\004\053\256\001\002\000\004\047\257\001\002" +
    "\000\006\002\uffdf\046\uffdf\001\002\000\004\050\261\001" +
    "\002\000\130\004\320\005\311\006\302\007\264\010\335" +
    "\011\327\012\304\013\324\014\325\015\275\016\332\017" +
    "\277\020\317\021\316\022\310\023\315\024\266\025\305" +
    "\032\273\034\333\035\265\036\313\037\323\040\334\041" +
    "\272\046\307\047\312\050\274\051\306\056\271\057\331" +
    "\060\303\061\300\062\267\063\263\064\314\065\276\066" +
    "\262\067\330\070\301\071\270\072\322\102\321\001\002" +
    "\000\004\101\uff54\001\002\000\004\101\uff57\001\002\000" +
    "\004\101\uff7a\001\002\000\004\101\uff6a\001\002\000\004" +
    "\101\uff6d\001\002\000\004\101\uff5c\001\002\000\004\101" +
    "\uff59\001\002\000\004\101\uff60\001\002\000\004\101\uff66" +
    "\001\002\000\004\101\uff65\001\002\000\004\101\uff62\001" +
    "\002\000\004\101\uff74\001\002\000\004\101\uff55\001\002" +
    "\000\004\101\uff72\001\002\000\004\101\uff5d\001\002\000" +
    "\004\101\uff5a\001\002\000\004\101\uff7b\001\002\000\004" +
    "\101\uff5e\001\002\000\004\101\uff77\001\002\000\004\101" +
    "\uff6c\001\002\000\004\101\uff61\001\002\000\004\101\uff64" +
    "\001\002\000\004\101\uff6f\001\002\000\004\101\uff7c\001" +
    "\002\000\004\101\uff63\001\002\000\004\101\uff69\001\002" +
    "\000\004\101\uff56\001\002\000\004\101\uff6e\001\002\000" +
    "\004\101\uff70\001\002\000\004\101\uff71\001\002\000\004" +
    "\101\uff7d\001\002\000\004\101\uff53\001\002\000\004\101" +
    "\uff58\001\002\000\004\101\uff68\001\002\000\004\101\uff76" +
    "\001\002\000\004\101\uff75\001\002\000\004\101\336\001" +
    "\002\000\004\101\uff78\001\002\000\004\101\uff5b\001\002" +
    "\000\004\101\uff5f\001\002\000\004\101\uff73\001\002\000" +
    "\004\101\uff6b\001\002\000\004\101\uff67\001\002\000\004" +
    "\101\uff79\001\002\000\004\047\337\001\002\000\004\046" +
    "\uffce\001\002\000\006\002\uffe0\046\uffe0\001\002\000\004" +
    "\060\342\001\002\000\004\047\343\001\002\000\004\046" +
    "\uffdd\001\002\000\004\061\345\001\002\000\004\047\346" +
    "\001\002\000\004\046\351\001\002\000\004\046\u0112\001" +
    "\002\000\004\046\367\001\002\000\004\057\352\001\002" +
    "\000\004\056\353\001\002\000\004\050\354\001\002\000" +
    "\010\014\360\015\357\023\356\001\002\000\004\047\364" +
    "\001\002\000\004\047\uffc4\001\002\000\004\047\362\001" +
    "\002\000\004\047\uffc5\001\002\000\004\046\uffc8\001\002" +
    "\000\044\026\210\027\226\030\217\031\220\033\212\042" +
    "\213\043\215\044\222\045\221\052\211\053\223\054\231" +
    "\055\230\074\225\075\227\076\214\077\216\001\002\000" +
    "\004\046\uffc6\001\002\000\004\075\365\001\002\000\004" +
    "\046\uffc7\001\002\000\004\046\u010f\001\002\000\006\057" +
    "\352\062\370\001\002\000\004\047\371\001\002\000\004" +
    "\046\372\001\002\000\006\053\373\065\374\001\002\000" +
    "\004\047\u010e\001\002\000\004\047\375\001\002\000\004" +
    "\046\u0100\001\002\000\004\046\uffc2\001\002\000\004\046" +
    "\u0108\001\002\000\004\063\u0101\001\002\000\004\073\u0102" +
    "\001\002\000\004\050\u0103\001\002\000\130\004\320\005" +
    "\311\006\302\007\264\010\335\011\327\012\304\013\324" +
    "\014\325\015\275\016\332\017\277\020\317\021\316\022" +
    "\310\023\315\024\266\025\305\032\273\034\333\035\265" +
    "\036\313\037\323\040\334\041\272\046\307\047\312\050" +
    "\274\051\306\056\271\057\331\060\303\061\300\062\267" +
    "\063\263\064\314\065\276\066\262\067\330\070\301\071" +
    "\270\072\322\102\321\001\002\000\004\101\u0105\001\002" +
    "\000\004\047\u0106\001\002\000\004\046\uffc1\001\002\000" +
    "\004\046\uffc3\001\002\000\006\063\u0101\066\u0109\001\002" +
    "\000\004\047\u010a\001\002\000\004\046\u010b\001\002\000" +
    "\004\053\u010c\001\002\000\004\047\u010d\001\002\000\006" +
    "\002\uffcd\046\uffcd\001\002\000\006\002\uffcc\046\uffcc\001" +
    "\002\000\004\060\u0110\001\002\000\004\047\u0111\001\002" +
    "\000\004\046\uffca\001\002\000\004\060\u0113\001\002\000" +
    "\004\047\u0114\001\002\000\004\046\uffc9\001\002\000\004" +
    "\061\u0116\001\002\000\004\047\u0117\001\002\000\004\046" +
    "\u011b\001\002\000\004\046\u0240\001\002\000\004\046\u0148" +
    "\001\002\000\004\046\u0148\001\002\000\004\057\u0236\001" +
    "\002\000\004\046\u0148\001\002\000\004\046\u01eb\001\002" +
    "\000\004\046\u01c4\001\002\000\004\046\u01b7\001\002\000" +
    "\004\046\u01ae\001\002\000\004\046\u0182\001\002\000\004" +
    "\046\u0148\001\002\000\004\046\u0162\001\002\000\004\046" +
    "\u0148\001\002\000\004\046\u012b\001\002\000\004\046\uffb8" +
    "\001\002\000\004\046\uffa5\001\002\000\004\046\uffa0\001" +
    "\002\000\004\046\uff93\001\002\000\004\046\uff85\001\002" +
    "\000\004\057\u012c\001\002\000\004\056\u012d\001\002\000" +
    "\004\050\u012e\001\002\000\004\025\u012f\001\002\000\004" +
    "\047\u0130\001\002\000\014\026\u0135\027\u0132\030\u0134\031" +
    "\u0133\033\u0131\001\002\000\004\046\u0142\001\002\000\004" +
    "\046\u013f\001\002\000\004\046\u013c\001\002\000\004\046" +
    "\u0139\001\002\000\004\046\u0136\001\002\000\004\060\u0137" +
    "\001\002\000\004\047\u0138\001\002\000\004\046\uffb3\001" +
    "\002\000\004\060\u013a\001\002\000\004\047\u013b\001\002" +
    "\000\004\046\uff9d\001\002\000\004\060\u013d\001\002\000" +
    "\004\047\u013e\001\002\000\004\046\uff90\001\002\000\004" +
    "\060\u0140\001\002\000\004\047\u0141\001\002\000\004\046" +
    "\uffa2\001\002\000\004\060\u0143\001\002\000\004\047\u0144" +
    "\001\002\000\004\046\uff82\001\002\000\004\046\uffa1\001" +
    "\002\000\004\046\u015e\001\002\000\004\046\u0159\001\002" +
    "\000\004\057\u0149\001\002\000\004\056\u014a\001\002\000" +
    "\004\050\u014b\001\002\000\006\014\u014c\024\u014d\001\002" +
    "\000\004\047\u0153\001\002\000\004\047\u014e\001\002\000" +
    "\004\075\u014f\001\002\000\004\046\u0150\001\002\000\004" +
    "\060\u0151\001\002\000\004\047\u0152\001\002\000\004\046" +
    "\uffb1\001\002\000\004\075\u0154\001\002\000\004\046\u0155" +
    "\001\002\000\004\060\u0156\001\002\000\004\047\u0157\001" +
    "\002\000\004\046\uffb2\001\002\000\004\046\uffb5\001\002" +
    "\000\004\057\u015a\001\002\000\004\056\u015b\001\002\000" +
    "\004\050\u015c\001\002\000\004\024\u014d\001\002\000\004" +
    "\046\uffb4\001\002\000\004\057\u015f\001\002\000\004\056" +
    "\u0160\001\002\000\004\050\u0161\001\002\000\004\014\u014c" +
    "\001\002\000\004\062\u0163\001\002\000\004\047\u0164\001" +
    "\002\000\004\046\u0165\001\002\000\004\071\u0166\001\002" +
    "\000\004\047\u0167\001\002\000\004\046\u016a\001\002\000" +
    "\004\046\u017e\001\002\000\004\046\u0175\001\002\000\004" +
    "\067\u016b\001\002\000\004\056\u016c\001\002\000\004\050" +
    "\u016d\001\002\000\006\017\u016f\032\u016e\001\002\000\004" +
    "\047\u0172\001\002\000\004\047\u0170\001\002\000\004\075" +
    "\u0171\001\002\000\004\046\uff7f\001\002\000\044\026\210" +
    "\027\226\030\217\031\220\033\212\042\213\043\215\044" +
    "\222\045\221\052\211\053\223\054\231\055\230\074\225" +
    "\075\227\076\214\077\216\001\002\000\004\046\uff7e\001" +
    "\002\000\004\046\u017b\001\002\000\006\067\u016b\072\u0176" +
    "\001\002\000\004\047\u0177\001\002\000\004\046\u0178\001" +
    "\002\000\004\053\u0179\001\002\000\004\047\u017a\001\002" +
    "\000\006\002\uffbc\046\uffbc\001\002\000\004\070\u017c\001" +
    "\002\000\004\047\u017d\001\002\000\004\046\uff81\001\002" +
    "\000\004\070\u017f\001\002\000\004\047\u0180\001\002\000" +
    "\004\046\uff80\001\002\000\004\046\uffa6\001\002\000\004" +
    "\062\u0183\001\002\000\004\047\u0184\001\002\000\004\046" +
    "\u0185\001\002\000\004\071\u0186\001\002\000\004\047\u0187" +
    "\001\002\000\004\046\u018a\001\002\000\004\046\u01a0\001" +
    "\002\000\004\046\u019c\001\002\000\004\067\u018b\001\002" +
    "\000\004\056\u018c\001\002\000\004\050\u018d\001\002\000" +
    "\010\034\u018e\035\u0190\036\u018f\001\002\000\004\047\u019a" +
    "\001\002\000\004\047\u0198\001\002\000\004\047\u0192\001" +
    "\002\000\004\046\uffae\001\002\000\012\042\u0195\043\u0197" +
    "\044\u0194\045\u0196\001\002\000\004\046\uffac\001\002\000" +
    "\004\046\uffa8\001\002\000\004\046\uffaa\001\002\000\004" +
    "\046\uffa7\001\002\000\004\046\uffa9\001\002\000\004\074" +
    "\u0199\001\002\000\004\046\uffab\001\002\000\044\026\210" +
    "\027\226\030\217\031\220\033\212\042\213\043\215\044" +
    "\222\045\221\052\211\053\223\054\231\055\230\074\225" +
    "\075\227\076\214\077\216\001\002\000\004\046\uffad\001" +
    "\002\000\004\070\u019d\001\002\000\004\047\u019e\001\002" +
    "\000\004\046\uffaf\001\002\000\004\046\u01a6\001\002\000" +
    "\006\067\u018b\072\u01a1\001\002\000\004\047\u01a2\001\002" +
    "\000\004\046\u01a3\001\002\000\004\053\u01a4\001\002\000" +
    "\004\047\u01a5\001\002\000\006\002\uffc0\046\uffc0\001\002" +
    "\000\004\070\u01a7\001\002\000\004\047\u01a8\001\002\000" +
    "\004\046\uffb0\001\002\000\004\046\u015e\001\002\000\004" +
    "\046\u015e\001\002\000\004\046\u015e\001\002\000\004\046" +
    "\u015e\001\002\000\004\046\u015e\001\002\000\004\057\u01af" +
    "\001\002\000\004\056\u01b0\001\002\000\004\050\u01b1\001" +
    "\002\000\006\014\u014c\025\u012f\001\002\000\004\046\uff83" +
    "\001\002\000\004\046\uff91\001\002\000\004\046\uff9e\001" +
    "\002\000\004\046\uffa3\001\002\000\004\046\uffb6\001\002" +
    "\000\004\062\u01b8\001\002\000\004\047\u01b9\001\002\000" +
    "\004\046\u01ba\001\002\000\004\071\u01bb\001\002\000\004" +
    "\047\u01bc\001\002\000\004\046\u018a\001\002\000\004\046" +
    "\u01be\001\002\000\006\067\u018b\072\u01bf\001\002\000\004" +
    "\047\u01c0\001\002\000\004\046\u01c1\001\002\000\004\053" +
    "\u01c2\001\002\000\004\047\u01c3\001\002\000\006\002\uffbf" +
    "\046\uffbf\001\002\000\004\062\u01c5\001\002\000\004\047" +
    "\u01c6\001\002\000\004\046\u01c7\001\002\000\004\071\u01c8" +
    "\001\002\000\004\047\u01c9\001\002\000\004\046\u01cb\001" +
    "\002\000\004\046\u01e8\001\002\000\004\067\u01cf\001\002" +
    "\000\004\046\u01ce\001\002\000\004\046\u01e5\001\002\000" +
    "\006\067\u01cf\072\u01d0\001\002\000\004\056\u01d5\001\002" +
    "\000\004\047\u01d1\001\002\000\004\046\u01d2\001\002\000" +
    "\004\053\u01d3\001\002\000\004\047\u01d4\001\002\000\006" +
    "\002\uffbe\046\uffbe\001\002\000\004\050\u01d6\001\002\000" +
    "\012\035\u01d7\037\u01d9\040\u01dc\041\u01db\001\002\000\004" +
    "\047\u01e3\001\002\000\004\046\uff97\001\002\000\004\047" +
    "\u01e1\001\002\000\004\046\uff9a\001\002\000\004\047\u01df" +
    "\001\002\000\004\047\u01dd\001\002\000\004\076\u01de\001" +
    "\002\000\004\046\uff96\001\002\000\004\076\u01e0\001\002" +
    "\000\004\046\uff95\001\002\000\044\026\210\027\226\030" +
    "\217\031\220\033\212\042\213\043\215\044\222\045\221" +
    "\052\211\053\223\054\231\055\230\074\225\075\227\076" +
    "\214\077\216\001\002\000\004\046\uff99\001\002\000\012" +
    "\042\u0195\043\u0197\044\u0194\045\u0196\001\002\000\004\046" +
    "\uff98\001\002\000\004\070\u01e6\001\002\000\004\047\u01e7" +
    "\001\002\000\004\046\uff9c\001\002\000\004\070\u01e9\001" +
    "\002\000\004\047\u01ea\001\002\000\004\046\uff9b\001\002" +
    "\000\004\062\u01ec\001\002\000\004\047\u01ed\001\002\000" +
    "\004\046\u01ee\001\002\000\004\071\u01ef\001\002\000\004" +
    "\047\u01f0\001\002\000\004\046\u01f5\001\002\000\004\046" +
    "\u022e\001\002\000\004\046\u0223\001\002\000\004\046\u021b" +
    "\001\002\000\004\046\u020d\001\002\000\004\067\u01f6\001" +
    "\002\000\004\056\u01f7\001\002\000\004\050\u01f8\001\002" +
    "\000\010\037\u01f9\040\u01fa\041\u01fb\001\002\000\004\047" +
    "\u0206\001\002\000\004\047\u0201\001\002\000\004\047\u01fc" +
    "\001\002\000\004\076\u01fd\001\002\000\004\046\u01fe\001" +
    "\002\000\004\070\u01ff\001\002\000\004\047\u0200\001\002" +
    "\000\004\046\uff87\001\002\000\004\076\u0202\001\002\000" +
    "\004\046\u0203\001\002\000\004\070\u0204\001\002\000\004" +
    "\047\u0205\001\002\000\004\046\uff88\001\002\000\044\026" +
    "\210\027\226\030\217\031\220\033\212\042\213\043\215" +
    "\044\222\045\221\052\211\053\223\054\231\055\230\074" +
    "\225\075\227\076\214\077\216\001\002\000\004\046\u0208" +
    "\001\002\000\004\070\u0209\001\002\000\004\047\u020a\001" +
    "\002\000\004\046\uff89\001\002\000\004\046\u0217\001\002" +
    "\000\004\046\u0212\001\002\000\004\067\u020e\001\002\000" +
    "\004\056\u020f\001\002\000\004\050\u0210\001\002\000\006" +
    "\037\u01f9\041\u01fb\001\002\000\004\046\uff8e\001\002\000" +
    "\004\067\u0213\001\002\000\004\056\u0214\001\002\000\004" +
    "\050\u0215\001\002\000\004\037\u01f9\001\002\000\004\046" +
    "\uff8a\001\002\000\004\067\u0218\001\002\000\004\056\u0219" +
    "\001\002\000\004\050\u021a\001\002\000\004\041\u01fb\001" +
    "\002\000\004\072\u021c\001\002\000\004\047\u021d\001\002" +
    "\000\004\046\u021e\001\002\000\004\053\u021f\001\002\000" +
    "\004\047\u0220\001\002\000\006\002\uffbd\046\uffbd\001\002" +
    "\000\004\046\u0228\001\002\000\004\046\u0212\001\002\000" +
    "\004\067\u0224\001\002\000\004\056\u0225\001\002\000\004" +
    "\050\u0226\001\002\000\006\037\u01f9\040\u01fa\001\002\000" +
    "\004\046\uff8b\001\002\000\004\067\u022a\001\002\000\004" +
    "\046\uff8d\001\002\000\004\056\u022b\001\002\000\004\050" +
    "\u022c\001\002\000\004\040\u01fa\001\002\000\004\046\u0228" +
    "\001\002\000\004\067\u0231\001\002\000\004\046\u0217\001" +
    "\002\000\004\046\uff8f\001\002\000\004\056\u0232\001\002" +
    "\000\004\050\u0233\001\002\000\006\040\u01fa\041\u01fb\001" +
    "\002\000\004\046\uff8c\001\002\000\004\046\uffb9\001\002" +
    "\000\004\056\u0237\001\002\000\004\050\u0238\001\002\000" +
    "\010\014\u014c\024\u014d\025\u012f\001\002\000\004\046\uff86" +
    "\001\002\000\004\046\uff94\001\002\000\004\046\u0159\001" +
    "\002\000\004\046\u0159\001\002\000\004\046\u0159\001\002" +
    "\000\004\046\u0159\001\002\000\004\046\u0159\001\002\000" +
    "\004\057\u0241\001\002\000\004\056\u0242\001\002\000\004" +
    "\050\u0243\001\002\000\006\024\u014d\025\u012f\001\002\000" +
    "\004\046\uff84\001\002\000\004\046\uff92\001\002\000\004" +
    "\046\uff9f\001\002\000\004\046\uffa4\001\002\000\004\046" +
    "\uffb7\001\002\000\004\002\001\001\002\000\004\047\u025e" +
    "\001\002\000\004\056\u024c\001\002\000\004\050\u024d\001" +
    "\002\000\022\004\u0253\005\u0252\006\u0251\007\u0254\010\u024e" +
    "\011\u0255\012\u024f\013\u0250\001\002\000\004\047\u025d\001" +
    "\002\000\004\047\u025c\001\002\000\004\047\u025b\001\002" +
    "\000\004\047\u025a\001\002\000\004\047\u0259\001\002\000" +
    "\004\047\u0258\001\002\000\004\047\u0257\001\002\000\004" +
    "\047\u0256\001\002\000\004\046\uffbb\001\002\000\004\046" +
    "\uffe8\001\002\000\004\046\ufff5\001\002\000\004\046\uffe9" +
    "\001\002\000\004\046\uffde\001\002\000\004\046\uffba\001" +
    "\002\000\004\046\uffe5\001\002\000\004\046\uffcb\001\002" +
    "\000\004\046\u025f\001\002\000\004\052\u024b\001\002\000" +
    "\004\046\ufffd\001\002\000\004\046\u0262\001\002\000\006" +
    "\052\u024b\055\u0264\001\002\000\004\046\ufffe\001\002\000" +
    "\004\047\u0265\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0263\000\036\002\006\004\011\007\016\010\015\011" +
    "\004\012\003\013\007\014\021\015\020\023\017\025\014" +
    "\027\013\037\012\044\010\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\025\017\026\001\001\000\004\017\052\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\020\034\021\041\022\036\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\067\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\026\113\102\115" +
    "\103\114\001\001\000\002\001\001\000\004\102\143\001" +
    "\001\000\004\103\136\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\030\161\031\162\001\001\000\004\031\234\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\032\173\033\200\034\177\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\223" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\035" +
    "\246\036\244\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\247\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\325\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\040\347" +
    "\041\346\001\001\000\002\001\001\000\004\041\365\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\042\360\043\354\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\362\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\100\376" +
    "\101\375\001\001\000\002\001\001\000\004\101\u0106\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u0103\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\045\u0120\047\u0124\051\u011e\054" +
    "\u011d\061\u011c\063\u0122\066\u0117\067\u011f\070\u011b\071\u0121" +
    "\072\u0123\073\u0118\074\u0119\001\001\000\016\067\u0157\070" +
    "\u023a\071\u023b\072\u023c\073\u023d\074\u023e\001\001\000\010" +
    "\047\u0239\066\u0146\067\u0145\001\001\000\010\047\u0238\066" +
    "\u0146\067\u0145\001\001\000\002\001\001\000\010\047\u0234" +
    "\066\u0146\067\u0145\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\066\u015c\070\u01a8\071\u01a9" +
    "\072\u01aa\073\u01ab\074\u01ac\001\001\000\002\001\001\000" +
    "\010\047\u0180\066\u0146\067\u0145\001\001\000\002\001\001" +
    "\000\010\047\u0144\066\u0146\067\u0145\001\001\000\014\070" +
    "\u0125\071\u0126\072\u0127\073\u0128\074\u0129\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\066\u015c" +
    "\001\001\000\004\067\u0157\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\064\u0168\065\u0167\001\001\000\002\001" +
    "\001\000\004\065\u0173\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u0172\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\046\u0187\053" +
    "\u0188\001\001\000\004\053\u019e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\u0190\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\050\u0192\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u019a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\066\u01b5\001\001\000\004\066\u01b4\001\001\000" +
    "\004\066\u01b3\001\001\000\004\066\u01b2\001\001\000\004" +
    "\066\u01b1\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\046\u01bc\053" +
    "\u0188\001\001\000\004\053\u019e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\055\u01cb\056\u01c9\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u01cc\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\057\u01d9\060\u01d7" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u01e1\001\001\000\002\001\001" +
    "\000\004\050\u01e3\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\062\u01f2\075\u01f3\076\u01f1\077\u01f0\001" +
    "\001\000\006\075\u022e\076\u022c\001\001\000\006\075\u0221" +
    "\077\u0220\001\001\000\002\001\001\000\006\076\u020b\077" +
    "\u020a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\u0206\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\076\u0215\001\001\000\004\077\u0210\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\075\u0228\001\001\000\004\077\u0226" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\075\u0233\001\001\000\002\001\001" +
    "\000\004\076\u022f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\067\u0247\001\001\000\004\067\u0246\001\001\000\004\067" +
    "\u0245\001\001\000\004\067\u0244\001\001\000\004\067\u0243" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\036\003\u0260\004\u025f\007\016" +
    "\010\015\011\004\012\003\013\007\014\021\015\020\023" +
    "\017\025\014\027\013\037\012\044\010\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\004\u0262\007\016\010" +
    "\015\011\004\012\003\013\007\014\021\015\020\023\017" +
    "\025\014\027\013\037\012\044\010\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	private ManejadorParser mp = null;
	private SitioWeb sw = null;
	private PaginaWeb pw = null;
	private int agregar = 1;
	private int clase = 0;
	private int internalOption = 0;

	// Connect this parser to a scanner!
	public parser(Lexer1 lex, ManejadorParser mp) {
		super(lex);
		this.mp = mp;
	}

        public void syntax_error(Symbol s) {
        	this.mp.showErrorMessege("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
            System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
        }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= main EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // main ::= SIGNO_MENOR ACCIONES_ABIERTO SIGNO_MAYOR main2 SIGNO_MENOR ACCIONES_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.updateBaseDatos();
              CUP$parser$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // main ::= main3 
            {
              String RESULT =null;
		mp.updateBaseDatos();
              CUP$parser$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // main2 ::= main2 main3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // main2 ::= main3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // main3 ::= crearSitio 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // main3 ::= borrarSitioPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // main3 ::= borrarComponente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // main3 ::= nuevaPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // main3 ::= modificarPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // main3 ::= agregarComponente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // crearSitio ::= accion1 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro1 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setSitioWeb(null, 7);internalOption = 0;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("crearSitio",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // accion1 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL NUEVO_SITIO_WEB SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setSitioWeb(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion1",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametro1 ::= parametro1 param1 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro1",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro1 ::= param1 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro1",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // param1 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param1",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opcion1 ::= op1 SIGNO_MAYOR FECHA_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;mp.setSitioWeb(RESULT, internalOption);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // opcion1 ::= op2 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;mp.setSitioWeb(RESULT, internalOption);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // op1 ::= FECHA_CREACION 
            {
              String RESULT =null;
		internalOption = 2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // op1 ::= FECHA_MODIFICACION 
            {
              String RESULT =null;
		internalOption = 3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // op2 ::= ID_TEXTO 
            {
              String RESULT =null;
		internalOption = 4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // op2 ::= USUARIO_CREACION 
            {
              String RESULT =null;
		internalOption = 5;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // op2 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;
		internalOption = 6;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // borrarSitioPagina ::= accion2 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro2 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		if(clase==6){mp.deleteSitioWeb(null, 3);}else if(clase==7){mp.deletePaginaWeb(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("borrarSitioPagina",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // accion2 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_SITIO_WEB SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 6;mp.deleteSitioWeb(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion2",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // accion2 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 7;mp.deletePaginaWeb(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion2",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametro2 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL ID_TEXTO SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e1; if(clase==6){mp.deleteSitioWeb(RESULT, 2);}else if(clase==7){mp.deletePaginaWeb(RESULT, 2);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro2",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // borrarComponente ::= accion3 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro3 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.deleteComponente(null, 4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("borrarComponente",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // accion3 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.deleteComponente(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion3",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametro3 ::= id2 pagin 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametro3 ::= pagin id2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // id2 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL ID_TEXTO SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e1;mp.deleteComponente(RESULT, 2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("id2",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // pagin ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL PAGINA SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e1;mp.deleteComponente(RESULT, 3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("pagin",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // nuevaPagina ::= accion4 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro4 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setPaginaWeb(null, 11);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nuevaPagina",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // nuevaPagina ::= accion4 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro4 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ETIQUETAS_ABIERTO SIGNO_MAYOR etiqueta1 SIGNO_MENOR ETIQUETAS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setPaginaWeb(null, 11);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nuevaPagina",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // accion4 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL NUEVA_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setPaginaWeb(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametro4 ::= parametro4 param3 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro4",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro4 ::= param3 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro4",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // param3 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param3",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // opcion3 ::= op4 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;mp.setPaginaWeb(RESULT, internalOption);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // opcion3 ::= TITULO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;mp.setPaginaWeb(RESULT, 10);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // opcion3 ::= op5 SIGNO_MAYOR FECHA_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e3;mp.setPaginaWeb(RESULT, internalOption);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // op4 ::= ID_TEXTO 
            {
              String RESULT =null;
		internalOption = 2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // op4 ::= SITIO 
            {
              String RESULT =null;
		internalOption = 3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // op4 ::= PADRE 
            {
              String RESULT =null;
		internalOption = 4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // op4 ::= USUARIO_CREACION 
            {
              String RESULT =null;
		internalOption = 5;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // op4 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;
		internalOption = 6;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // op5 ::= FECHA_CREACION 
            {
              String RESULT =null;
		internalOption = 7;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op5",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // op5 ::= FECHA_MODIFICACION 
            {
              String RESULT =null;
		internalOption = 8;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("op5",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // etiqueta1 ::= etiqueta1 etique1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // etiqueta1 ::= etique1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // etique1 ::= SIGNO_MENOR ETIQUETA_ABIERTO VALOR SIGNO_IGUAL palabraRes SLASH SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		RESULT = e1;mp.setPaginaWeb(RESULT, 9);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("etique1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // modificarPagina ::= accion5 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro5 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ETIQUETAS_ABIERTO SIGNO_MAYOR etiqueta2 SIGNO_MENOR ETIQUETAS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.modifyPaginaWeb(null, 5);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("modificarPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // modificarPagina ::= accion5 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro5 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.modifyPaginaWeb(null, 5);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("modificarPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // accion5 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL MODIFICAR_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.modifyPaginaWeb(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion5",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametro5 ::= parametro5 param4 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro5",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parametro5 ::= param4 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro5",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // param4 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param4",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // opcion4 ::= op6 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1; mp.modifyPaginaWeb(RESULT, 2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion4",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // opcion4 ::= TITULO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2; mp.modifyPaginaWeb(RESULT, 3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion4",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // op6 ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op6",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // op6 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op6",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // etiqueta2 ::= etiqueta2 etique2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // etiqueta2 ::= etique2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // etique2 ::= SIGNO_MENOR ETIQUETA_ABIERTO VALOR SIGNO_IGUAL palabraRes SLASH SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		RESULT = e1; mp.modifyPaginaWeb(RESULT, 4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("etique2",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro6 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo1 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setClase(clase);if(agregar == 1){mp.setComponente(null, 3);} else if (agregar==0){mp.updateComponente(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro7 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo1 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setClase(clase);if(agregar == 1){mp.setComponente(null, 3);} else if (agregar==0){mp.updateComponente(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro8 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo2 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setClase(clase);if(agregar == 1){mp.setComponente(null, 3);} else if (agregar==0){mp.updateComponente(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro9 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo3 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setClase(clase);if(agregar == 1){mp.setComponente(null, 3);} else if (agregar==0){mp.updateComponente(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro10 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo4 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		mp.setClase(clase);if(agregar == 1){mp.setComponente(null, 3);} else if (agregar==0){mp.updateComponente(null, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // accion6 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL AGREGAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;
		agregar = 1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion6",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // accion6 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL MODIFICAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;
		agregar = 0;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion6",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parametro6 ::= titulo idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametro6 ::= idPagina titulo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parametro6 ::= id titulo pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // parametro6 ::= pagina titulo id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // idPagina ::= id pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("idPagina",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // idPagina ::= pagina id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("idPagina",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // titulo ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR TITULO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 1;mp.setTitulo(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("titulo",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // id ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL ID_TEXTO SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e1;if(agregar==1){mp.setComponente(RESULT, 1);}else if(agregar==0){mp.updateComponente(RESULT, 1);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("id",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // pagina ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL PAGINA SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e2;if(agregar==1){mp.setComponente(RESULT, 2);}else if(agregar==0){mp.updateComponente(RESULT, 2);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("pagina",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // atributo1 ::= atributo1 atrib1 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo1",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // atributo1 ::= atrib1 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo1",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // atrib1 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL opcion6 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // opcion6 ::= TEXTO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;if(clase == 1){mp.setTitulo(RESULT, 2);} else if (clase == 2){mp.setParrafo(RESULT, 2);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // opcion6 ::= ALINEACION SIGNO_MAYOR alineacion 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;if(clase == 1){mp.setTitulo(RESULT, 3);} else if (clase == 2){mp.setParrafo(RESULT, 3);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // opcion6 ::= COLOR SIGNO_MAYOR HEXADECIMAL_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e3;if(clase == 1){mp.setTitulo(RESULT, 4);} else if (clase == 2){mp.setParrafo(RESULT, 4);};
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // alineacion ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // alineacion ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // alineacion ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // alineacion ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametro7 ::= parrafo idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // parametro7 ::= idPagina parrafo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // parametro7 ::= id parrafo pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametro7 ::= pagina parrafo id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parrafo ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR PARRAFO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 2;mp.setParrafo(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parrafo",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametro8 ::= imagen idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametro8 ::= idPagina imagen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametro8 ::= id imagen pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // parametro8 ::= pagina imagen id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // imagen ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR IMAGEN_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 3;mp.setImagen(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("imagen",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // atributo2 ::= atributo2 atrib2 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo2",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // atributo2 ::= atrib2 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo2",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // atrib2 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL opcion7 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib2",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // opcion7 ::= ORIGEN SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;mp.setImagen(RESULT, 2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // opcion7 ::= ALINEACION SIGNO_MAYOR alineacion 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;mp.setImagen(RESULT, 3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // opcion7 ::= tamano 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // tamano ::= ALTURA SIGNO_MAYOR ENTERO_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;mp.setImagen(RESULT, 4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tamano",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // tamano ::= ANCHO SIGNO_MAYOR ENTERO_PARAMETRO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;mp.setImagen(RESULT, 5);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tamano",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // parametro9 ::= video idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // parametro9 ::= idPagina video 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // parametro9 ::= id video pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // parametro9 ::= pagina video id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // video ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR VIDEO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 4;mp.setVideo(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("video",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // atributo3 ::= origen altura ancho 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // atributo3 ::= altura ancho origen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // atributo3 ::= ancho origen altura 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // atributo3 ::= origen ancho altura 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // atributo3 ::= ancho altura origen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // atributo3 ::= altura origen ancho 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // origen ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ORIGEN SIGNO_MAYOR paraReservado SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e3;mp.setVideo(RESULT, 2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // altura ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ALTURA SIGNO_MAYOR ENTERO_PARAMETRO SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e1;mp.setVideo(RESULT, 3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("altura",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ancho ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ANCHO SIGNO_MAYOR ENTERO_PARAMETRO SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT = e2;mp.setVideo(RESULT, 4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ancho",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // parametro10 ::= menu idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // parametro10 ::= idPagina menu 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // parametro10 ::= id menu pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // parametro10 ::= pagina menu id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // menu ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR MENU_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;
		clase = 5;mp.setMenu(null, 1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("menu",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // atributo4 ::= atributo4 atrib4 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo4",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // atributo4 ::= atrib4 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo4",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // atrib4 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL PADRE SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;mp.setMenu(RESULT, 2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // atrib4 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ETIQUETAS SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;mp.setMenu(RESULT, 3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib4",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // palabraRes ::= NUEVO_SITIO_WEB 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // palabraRes ::= BORRAR_SITIO_WEB 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // palabraRes ::= NUEVA_PAGINA 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // palabraRes ::= BORRAR_PAGINA 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // palabraRes ::= MODIFICAR_PAGINA 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e5;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // palabraRes ::= AGREGAR_COMPONENTE 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e6;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // palabraRes ::= BORRAR_COMPONENTE 
            {
              String RESULT =null;
		int e7left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e7right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e7;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // palabraRes ::= MODIFICAR_COMPONENTE 
            {
              String RESULT =null;
		int e8left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e8right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e8 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e8;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // palabraRes ::= ID_TEXTO 
            {
              String RESULT =null;
		int e9left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e9right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e9 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e9;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // palabraRes ::= TITULO 
            {
              String RESULT =null;
		int e10left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e10right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e10 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e10;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // palabraRes ::= SITIO 
            {
              String RESULT =null;
		int e11left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e11right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e11 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e11;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // palabraRes ::= PADRE 
            {
              String RESULT =null;
		int e12left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e12right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e12 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e12;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // palabraRes ::= USUARIO_CREACION 
            {
              String RESULT =null;
		int e13left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e13right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e13 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e13;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // palabraRes ::= FECHA_CREACION 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // palabraRes ::= FECHA_MODIFICACION 
            {
              String RESULT =null;
		int e14left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e14right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e14 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e14;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // palabraRes ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;
		int e15left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e15right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e15 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e15;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // palabraRes ::= PAGINA 
            {
              String RESULT =null;
		int e16left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e16right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e16 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e16;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // palabraRes ::= CLASE 
            {
              String RESULT =null;
		int e17left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e17right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e17 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e17;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // palabraRes ::= TEXTO 
            {
              String RESULT =null;
		int e18left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e18right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e18 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e18;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // palabraRes ::= ALINEACION 
            {
              String RESULT =null;
		int e19left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e19right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e19 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e19;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // palabraRes ::= COLOR 
            {
              String RESULT =null;
		int e20left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e20right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e20 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e20;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // palabraRes ::= ORIGEN 
            {
              String RESULT =null;
		int e21left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e21right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e21;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // palabraRes ::= ALTURA 
            {
              String RESULT =null;
		int e22left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e22right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e22;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // palabraRes ::= ANCHO 
            {
              String RESULT =null;
		int e23left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e23right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e23 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e23;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // palabraRes ::= ETIQUETAS 
            {
              String RESULT =null;
		int e24left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e24right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e24 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e24;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // palabraRes ::= SIGNO_MENOR 
            {
              String RESULT =null;
		int e25left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e25right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e25 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e25;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // palabraRes ::= SIGNO_MAYOR 
            {
              String RESULT =null;
		int e26left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e26right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e26 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e26;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // palabraRes ::= SIGNO_IGUAL 
            {
              String RESULT =null;
		int e27left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e27right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e27 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e27;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // palabraRes ::= COMILLAS 
            {
              String RESULT =null;
		int e28left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e28right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e28 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e28;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // palabraRes ::= NOMBRE 
            {
              String RESULT =null;
		int e29left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e29right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e29 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e29;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // palabraRes ::= PARAMETRO_ABIERTO 
            {
              String RESULT =null;
		int e30left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e30right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e30 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e30;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // palabraRes ::= PARAMETRO_CERRADO 
            {
              String RESULT =null;
		int e31left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e31right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e31;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // palabraRes ::= PARAMETROS_ABIERTO 
            {
              String RESULT =null;
		int e32left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e32right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e32;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // palabraRes ::= PARAMETROS_CERRADO 
            {
              String RESULT =null;
		int e33left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e33right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e33 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e33;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // palabraRes ::= ATRIBUTO_ABIERTO 
            {
              String RESULT =null;
		int e34left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e34right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e34 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e34;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // palabraRes ::= ATRIBUTO_CERRADO 
            {
              String RESULT =null;
		int e35left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e35right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e35 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e35;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // palabraRes ::= ATRIBUTOS_ABIERTO 
            {
              String RESULT =null;
		int e36left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e36right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e36 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e36;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // palabraRes ::= ATRIBUTOS_CERRADO 
            {
              String RESULT =null;
		int e37left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e37right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e37 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e37;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // palabraRes ::= ETIQUETA_ABIERTO 
            {
              String RESULT =null;
		int e38left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e38right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e38 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e38;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // palabraRes ::= ETIQUETA_CERRADO 
            {
              String RESULT =null;
		int e39left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e39right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e39 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e39;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // palabraRes ::= ETIQUETAS_ABIERTO 
            {
              String RESULT =null;
		int e40left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e40right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e40 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e40;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // palabraRes ::= ETIQUETAS_CERRADO 
            {
              String RESULT =null;
		int e41left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e41right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e41 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e41;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // palabraRes ::= TEXTO_STRING 
            {
              String RESULT =null;
		int e42left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e42right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e42 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e42;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // paraReservado ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // paraReservado ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // paraReservado ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // paraReservado ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // paraReservado ::= ACCION_ABIERTO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e5;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // paraReservado ::= ACCION_CERRADO 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e6;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // paraReservado ::= ACCIONES_ABIERTO 
            {
              String RESULT =null;
		int e7left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e7right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e7;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // paraReservado ::= ACCIONES_CERRADO 
            {
              String RESULT =null;
		int e8left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e8right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e8 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e8;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // paraReservado ::= TITULO_PARAMETRO 
            {
              String RESULT =null;
		int e9left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e9right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e9 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e9;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // paraReservado ::= PARRAFO_PARAMETRO 
            {
              String RESULT =null;
		int e10left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e10right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e10 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e10;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // paraReservado ::= IMAGEN_PARAMETRO 
            {
              String RESULT =null;
		int e11left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e11right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e11 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e11;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // paraReservado ::= VIDEO_PARAMETRO 
            {
              String RESULT =null;
		int e12left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e12right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e12 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e12;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // paraReservado ::= MENU_PARAMETRO 
            {
              String RESULT =null;
		int e13left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e13right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e13 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e13;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // paraReservado ::= IDENTIFICADOR 
            {
              String RESULT =null;
		int e14left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e14right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e14 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e14;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // paraReservado ::= TEXTO_PARAMETRO 
            {
              String RESULT =null;
		int e15left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e15right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e15 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e15;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // paraReservado ::= ENTERO_PARAMETRO 
            {
              String RESULT =null;
		int e16left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e16right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e16 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e16;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // paraReservado ::= HEXADECIMAL_PARAMETRO 
            {
              String RESULT =null;
		int e17left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e17right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e17 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e17;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
